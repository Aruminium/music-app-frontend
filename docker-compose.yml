version: "3.0"
services:
  web:
    build: ./server
    container_name: music-app-backend-web
    hostname: web-server
    restart: always
    tty: true
    volumes:
      - ./server/app:app
    environment:
      TZ: "${TZ}"
      DB_USER_NAME: "${DB_USER_NAME}"
      DB_PW: "${DB_USER_PW}"
      DB_HOST: "${DB_HOST}"
      DB_NAME: "${DB_NAME}"
    expose:
      - 8000
    depends_on:
      - db
    networks:
      - music-app-web
      - music-app-db

  react_native:
    build: ./frontend
    volumes:
      - ./frontend/:./frontend
    command: expo start
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
  nginx:
    image: nginx:alpine
    container_name: music-app-nginx
    hostname: nginx-server
    depends_on:
      - web
    ports:
      - 80:80
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - music-app-web

  db:
    build: ./db
    container_name: music-app-backend-db
    hostname: db-server
    volumes:
      - ./db/save_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PW}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER_NAME}"
      MYSQL_PASSWORD: "${DB_USER_PW}"
      MYSQL_ROOT_HOST: "%"
      TZ: "${TZ}"
    networks:
      - music-app-db

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: music-app-backend-phpmyadmin
    hostname: phpmyadmin-server
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: db
      PMA_USER: "${DB_USER_NAME}"
      PMA_PASSWORD: "${DB_USER_PW}"
    restart: always
    ports:
      - 3030:80
    depends_on:
      - db
    networks:
      - music-app-db

  networks:
    music-app-web:
      driver: bridge
      ipam:
        driver: defalut
        config:
          - subnet: 192:168:10:0/24
    music-app-db:
      driver: bridge
      ipam:
        driver: defalut
        config:
          - subnet: 192:168:20:0/24
